07-Jun-2019 21:49:41.827 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version: Apache Tomcat/8.0.14
07-Jun-2019 21:49:41.828 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:   Sep 24 2014 09:01:51
07-Jun-2019 21:49:41.828 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server number:  8.0.14.0
07-Jun-2019 21:49:41.828 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:        Linux
07-Jun-2019 21:49:41.829 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:     4.15.0-51-generic
07-Jun-2019 21:49:41.829 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:   amd64
07-Jun-2019 21:49:41.829 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:    1.8.0_201-b09
07-Jun-2019 21:49:41.829 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:     Oracle Corporation
07-Jun-2019 21:49:42.002 INFO [main] org.apache.catalina.core.AprLifecycleListener.init The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
07-Jun-2019 21:49:42.264 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
07-Jun-2019 21:49:42.299 INFO [main] org.apache.tomcat.util.net.NioSelectorPool.getSharedSelector Using a shared selector for servlet write/read
07-Jun-2019 21:49:42.303 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["ajp-nio-8009"]
07-Jun-2019 21:49:42.306 INFO [main] org.apache.tomcat.util.net.NioSelectorPool.getSharedSelector Using a shared selector for servlet write/read
07-Jun-2019 21:49:42.307 INFO [main] org.apache.catalina.startup.Catalina.load Initialization processed in 536 ms
07-Jun-2019 21:49:42.327 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service Catalina
07-Jun-2019 21:49:42.327 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet Engine: Apache Tomcat/8.0.14
07-Jun-2019 21:49:42.334 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying configuration descriptor /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/conf/Catalina/localhost/host-manager.xml
07-Jun-2019 21:49:42.627 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
07-Jun-2019 21:49:42.652 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of configuration descriptor /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/conf/Catalina/localhost/host-manager.xml has finished in 318 ms
07-Jun-2019 21:49:42.653 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying configuration descriptor /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/conf/Catalina/localhost/manager.xml
07-Jun-2019 21:49:42.840 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
07-Jun-2019 21:49:42.842 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of configuration descriptor /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/conf/Catalina/localhost/manager.xml has finished in 189 ms
07-Jun-2019 21:49:42.844 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/ngbilling.war
Loading configuration files from /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/ngbilling
Setting NGBILLING_HOME to /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/ngbilling
Loading configuration files from NGBILLING_HOME = /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/ngbilling
Loading configuration files from NGBILLING_HOME = /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/ngbilling
Loading configuration files from NGBILLING_HOME = /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/ngbilling

Configuring Spring Security Core ...
... finished configuring Spring Security Core

System properties loaded from: /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/ngbilling/ngbilling.properties
Resolved jbilling resources directory to: /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/ngbilling/resources/
07-Jun-2019 21:50:28.596 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/ngbilling.war has finished in 45,752 ms
07-Jun-2019 21:50:28.597 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/ROOT
07-Jun-2019 21:50:28.666 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
07-Jun-2019 21:50:28.667 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/ROOT has finished in 70 ms
07-Jun-2019 21:50:28.667 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/docs
07-Jun-2019 21:50:28.725 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
07-Jun-2019 21:50:28.726 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/docs has finished in 58 ms
07-Jun-2019 21:50:28.726 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/examples
07-Jun-2019 21:50:28.915 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/examples has finished in 189 ms
07-Jun-2019 21:50:28.919 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
07-Jun-2019 21:50:28.924 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["ajp-nio-8009"]
07-Jun-2019 21:50:28.925 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 46617 ms
Exception ******************org.springframework.security.authentication.BadCredentialsException: Bad credentials
Exception ******************org.springframework.security.authentication.BadCredentialsException: Bad credentials
Exception ******************org.springframework.security.authentication.BadCredentialsException: Bad credentials
07-Jun-2019 22:01:51.700 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
07-Jun-2019 22:01:51.701 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
07-Jun-2019 22:01:51.752 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["ajp-nio-8009"]
07-Jun-2019 22:01:51.803 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service Catalina
07-Jun-2019 22:01:54.731 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [/ngbilling] registered the JDBC driver [org.postgresql.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
07-Jun-2019 22:01:54.731 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [/ngbilling] registered the JDBC driver [org.hsqldb.jdbc.JDBCDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
07-Jun-2019 22:01:54.732 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [ActiveMQ Scheduler] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.util.TimerThread.mainLoop(Timer.java:552)
 java.util.TimerThread.run(Timer.java:505)
07-Jun-2019 22:01:54.733 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [VMTransport] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
 java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
07-Jun-2019 22:01:54.733 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [ActiveMQ Session Task] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
 java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
07-Jun-2019 22:01:54.734 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [VMTransport] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
 java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
07-Jun-2019 22:01:54.734 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:01:54.735 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:01:54.735 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:01:54.736 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:01:54.737 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:01:54.738 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:01:54.738 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-7] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:01:54.739 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-8] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:01:54.739 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-9] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:01:54.740 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-10] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:01:54.740 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [Timer-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.util.TimerThread.mainLoop(Timer.java:552)
 java.util.TimerThread.run(Timer.java:505)
07-Jun-2019 22:01:54.741 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [VMTransport] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
 java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
07-Jun-2019 22:01:54.741 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [BrokerService] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
 java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
07-Jun-2019 22:01:54.741 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [ActiveMQ Task] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
 java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
07-Jun-2019 22:01:54.742 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [Persistence Adaptor Task] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
 java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
07-Jun-2019 22:01:54.742 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_QuartzSchedulerThread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:410)
07-Jun-2019 22:01:54.746 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.codehaus.groovy.grails.web.converters.configuration.ConvertersConfigurationHolder$2] (value [org.codehaus.groovy.grails.web.converters.configuration.ConvertersConfigurationHolder$2@12fcbdc1]) and a value of type [java.util.HashMap] (value [{}]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:01:54.746 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.codehaus.groovy.grails.web.converters.configuration.ConvertersConfigurationHolder$2] (value [org.codehaus.groovy.grails.web.converters.configuration.ConvertersConfigurationHolder$2@12fcbdc1]) and a value of type [java.util.HashMap] (value [{}]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:01:54.746 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.springframework.core.NamedThreadLocal] (value [Thread-local instance of bean 'null']) and a value of type [com.sapienter.jbilling.server.util.NanoStopWatch] (value [com.sapienter.jbilling.server.util.NanoStopWatch@6969fe57]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:01:54.751 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.grails.datastore.mapping.core.SoftThreadLocalMap] (value [org.grails.datastore.mapping.core.SoftThreadLocalMap@5b41a34d]) and a value of type [org.springframework.util.ConcurrentReferenceHashMap] (value [{1247668644=grails.validation.ValidationErrors: 0 errors, 737916535=grails.validation.ValidationErrors: 0 errors, 297272423=grails.validation.ValidationErrors: 0 errors, 176411867=grails.validation.ValidationErrors: 0 errors, 30854464=grails.validation.ValidationErrors: 0 errors, 1343808078=grails.validation.ValidationErrors: 0 errors, 13088089=grails.validation.ValidationErrors: 0 errors}]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:01:54.751 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.springframework.core.NamedThreadLocal] (value [Thread-local instance of bean 'null']) and a value of type [com.sapienter.jbilling.server.util.NanoStopWatch] (value [com.sapienter.jbilling.server.util.NanoStopWatch@19c0f500]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:01:54.751 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.grails.datastore.mapping.core.SoftThreadLocalMap] (value [org.grails.datastore.mapping.core.SoftThreadLocalMap@5b41a34d]) and a value of type [org.springframework.util.ConcurrentReferenceHashMap] (value [{228302700=grails.validation.ValidationErrors: 0 errors}]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:01:54.752 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.codehaus.groovy.grails.web.converters.configuration.ConvertersConfigurationHolder$2] (value [org.codehaus.groovy.grails.web.converters.configuration.ConvertersConfigurationHolder$2@12fcbdc1]) and a value of type [java.util.HashMap] (value [{}]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:01:54.752 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.grails.datastore.mapping.core.SoftThreadLocalMap] (value [org.grails.datastore.mapping.core.SoftThreadLocalMap@5b41a34d]) and a value of type [org.springframework.util.ConcurrentReferenceHashMap] (value [{1099178218=grails.validation.ValidationErrors: 0 errors}]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:01:54.752 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.codehaus.groovy.grails.web.converters.configuration.ConvertersConfigurationHolder$2] (value [org.codehaus.groovy.grails.web.converters.configuration.ConvertersConfigurationHolder$2@12fcbdc1]) and a value of type [java.util.HashMap] (value [{}]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:01:54.752 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.grails.datastore.mapping.core.SoftThreadLocalMap] (value [org.grails.datastore.mapping.core.SoftThreadLocalMap@5b41a34d]) and a value of type [org.springframework.util.ConcurrentReferenceHashMap] (value [{1493435368=grails.validation.ValidationErrors: 0 errors, 471324044=grails.validation.ValidationErrors: 0 errors, 1467075815=grails.validation.ValidationErrors: 0 errors}]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:01:54.752 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.springframework.core.NamedThreadLocal] (value [Transactional resources]) and a value of type [java.util.HashMap] (value [{org.hibernate.impl.SessionFactoryImpl@3047fd58=org.springframework.orm.hibernate3.SessionHolder@3bbe0f39}]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:01:54.752 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.springframework.core.NamedThreadLocal] (value [Thread-local instance of bean 'null']) and a value of type [com.sapienter.jbilling.server.util.NanoStopWatch] (value [com.sapienter.jbilling.server.util.NanoStopWatch@2e9e396f]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:01:54.753 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.grails.datastore.mapping.core.SoftThreadLocalMap] (value [org.grails.datastore.mapping.core.SoftThreadLocalMap@5b41a34d]) and a value of type [org.springframework.util.ConcurrentReferenceHashMap] (value [{675692889=grails.validation.ValidationErrors: 0 errors, 2128723414=grails.validation.ValidationErrors: 0 errors}]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:01:54.775 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
07-Jun-2019 22:01:54.833 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["ajp-nio-8009"]
07-Jun-2019 22:01:54.895 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
07-Jun-2019 22:01:54.896 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["ajp-nio-8009"]
07-Jun-2019 22:03:16.622 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version: Apache Tomcat/8.0.14
07-Jun-2019 22:03:16.623 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:   Sep 24 2014 09:01:51
07-Jun-2019 22:03:16.623 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server number:  8.0.14.0
07-Jun-2019 22:03:16.623 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:        Linux
07-Jun-2019 22:03:16.623 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:     4.15.0-51-generic
07-Jun-2019 22:03:16.624 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:   amd64
07-Jun-2019 22:03:16.624 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:    1.8.0_201-b09
07-Jun-2019 22:03:16.624 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:     Oracle Corporation
07-Jun-2019 22:03:16.790 INFO [main] org.apache.catalina.core.AprLifecycleListener.init The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
07-Jun-2019 22:03:16.955 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
07-Jun-2019 22:03:16.970 INFO [main] org.apache.tomcat.util.net.NioSelectorPool.getSharedSelector Using a shared selector for servlet write/read
07-Jun-2019 22:03:16.972 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["ajp-nio-8009"]
07-Jun-2019 22:03:16.975 INFO [main] org.apache.tomcat.util.net.NioSelectorPool.getSharedSelector Using a shared selector for servlet write/read
07-Jun-2019 22:03:16.975 INFO [main] org.apache.catalina.startup.Catalina.load Initialization processed in 409 ms
07-Jun-2019 22:03:16.992 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service Catalina
07-Jun-2019 22:03:16.992 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet Engine: Apache Tomcat/8.0.14
07-Jun-2019 22:03:16.999 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying configuration descriptor /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/conf/Catalina/localhost/host-manager.xml
07-Jun-2019 22:03:17.324 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
07-Jun-2019 22:03:17.350 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of configuration descriptor /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/conf/Catalina/localhost/host-manager.xml has finished in 351 ms
07-Jun-2019 22:03:17.351 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying configuration descriptor /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/conf/Catalina/localhost/manager.xml
07-Jun-2019 22:03:17.546 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
07-Jun-2019 22:03:17.548 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of configuration descriptor /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/conf/Catalina/localhost/manager.xml has finished in 197 ms
07-Jun-2019 22:03:17.550 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/ngbilling.war
Loading configuration files from /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/ngbilling
Setting NGBILLING_HOME to /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/ngbilling
Loading configuration files from NGBILLING_HOME = /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/ngbilling
Loading configuration files from NGBILLING_HOME = /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/ngbilling
Loading configuration files from NGBILLING_HOME = /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/ngbilling

Configuring Spring Security Core ...
... finished configuring Spring Security Core

System properties loaded from: /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/ngbilling/ngbilling.properties
Resolved jbilling resources directory to: /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/ngbilling/resources/
07-Jun-2019 22:04:03.963 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/ngbilling.war has finished in 46,412 ms
07-Jun-2019 22:04:03.964 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/ROOT
07-Jun-2019 22:04:04.044 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
07-Jun-2019 22:04:04.046 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/ROOT has finished in 83 ms
07-Jun-2019 22:04:04.046 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/docs
07-Jun-2019 22:04:04.108 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
07-Jun-2019 22:04:04.109 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/docs has finished in 63 ms
07-Jun-2019 22:04:04.109 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/examples
07-Jun-2019 22:04:04.297 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory /home/rakesh/Documents/MyCommercialProducts/jbilling4/Binary/ngbilling/webapps/examples has finished in 188 ms
07-Jun-2019 22:04:04.303 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
07-Jun-2019 22:04:04.310 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["ajp-nio-8009"]
07-Jun-2019 22:04:04.310 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 47335 ms
07-Jun-2019 22:24:04.989 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/ngbilling]
07-Jun-2019 22:24:07.314 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [/ngbilling] registered the JDBC driver [org.postgresql.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
07-Jun-2019 22:24:07.315 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [/ngbilling] registered the JDBC driver [org.hsqldb.jdbc.JDBCDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
07-Jun-2019 22:24:07.316 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [ActiveMQ Scheduler] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.util.TimerThread.mainLoop(Timer.java:552)
 java.util.TimerThread.run(Timer.java:505)
07-Jun-2019 22:24:07.317 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [ActiveMQ Session Task] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
 java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
07-Jun-2019 22:24:07.317 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [VMTransport] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
 java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
07-Jun-2019 22:24:07.318 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:24:07.318 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:24:07.319 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:24:07.319 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:24:07.320 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:24:07.320 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:24:07.321 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-7] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:24:07.321 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-8] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:24:07.322 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-9] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:24:07.322 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_Worker-10] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568)
07-Jun-2019 22:24:07.323 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [Timer-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.util.TimerThread.mainLoop(Timer.java:552)
 java.util.TimerThread.run(Timer.java:505)
07-Jun-2019 22:24:07.324 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [VMTransport] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
 java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
07-Jun-2019 22:24:07.324 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [VMTransport] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
 java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
07-Jun-2019 22:24:07.325 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [BrokerService] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
 java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
07-Jun-2019 22:24:07.325 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [ActiveMQ Task] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
 java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
07-Jun-2019 22:24:07.326 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [Persistence Adaptor Task] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
 java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
07-Jun-2019 22:24:07.326 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [/ngbilling] appears to have started a thread named [DefaultQuartzScheduler_QuartzSchedulerThread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:410)
07-Jun-2019 22:24:07.383 SEVERE [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.grails.datastore.mapping.core.SoftThreadLocalMap] (value [org.grails.datastore.mapping.core.SoftThreadLocalMap@3eee1a5e]) and a value of type [org.springframework.util.ConcurrentReferenceHashMap] (value [{707279612=grails.validation.ValidationErrors: 0 errors}]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:24:07.385 SEVERE [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.springframework.core.NamedThreadLocal] (value [Thread-local instance of bean 'null']) and a value of type [com.sapienter.jbilling.server.util.NanoStopWatch] (value [com.sapienter.jbilling.server.util.NanoStopWatch@12aa6c66]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:24:07.385 SEVERE [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.codehaus.groovy.grails.web.converters.configuration.ConvertersConfigurationHolder$2] (value [org.codehaus.groovy.grails.web.converters.configuration.ConvertersConfigurationHolder$2@6d2cef1d]) and a value of type [java.util.HashMap] (value [{}]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:24:07.386 SEVERE [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.codehaus.groovy.grails.web.converters.configuration.ConvertersConfigurationHolder$2] (value [org.codehaus.groovy.grails.web.converters.configuration.ConvertersConfigurationHolder$2@6d2cef1d]) and a value of type [java.util.HashMap] (value [{}]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
07-Jun-2019 22:24:07.387 SEVERE [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [/ngbilling] created a ThreadLocal with key of type [org.grails.datastore.mapping.core.SoftThreadLocalMap] (value [org.grails.datastore.mapping.core.SoftThreadLocalMap@3eee1a5e]) and a value of type [org.springframework.util.ConcurrentReferenceHashMap] (value [{1786523744=grails.validation.ValidationErrors: 0 errors, 32785434=grails.validation.ValidationErrors: 0 errors}]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
